name: Atlas AI Gold Standard CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  core-validation:
    name: Staging Validation (COMPREHENSIVE)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint Check
        run: npm run lint

      - name: Run Type Check
        run: npm run typecheck

      - name: Run Tests
        run: npm run test
        env:
          NODE_ENV: test
          USE_MOCK_MAILER: true

      - name: Run Comprehensive Staging Validation
        run: ./scripts/staging-validation.sh

  production-validation:
    name: Production Critical Validation (BLOCKING)
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop'
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint Check
        run: npm run lint

      - name: Run Type Check
        run: npm run typecheck

      - name: Run Tests
        run: npm run test
        env:
          NODE_ENV: test
          USE_MOCK_MAILER: true

      - name: Run Production Critical Validation
        run: ./scripts/production-critical-validation.sh

      - name: Upload Core Validation Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: core-validation-results
          path: |
            coverage/
            test-results/

  e2e-validation:
    name: E2E Validation (NON-BLOCKING)
    runs-on: ubuntu-latest
    needs: [core-validation, production-validation]
    if: always() # Run even if validation fails
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E Validation (Non-blocking)
        run: ./scripts/playwright-validation.sh
        continue-on-error: true

      - name: Upload E2E Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report-${{ github.sha }}
          path: playwright-report/

name: Manual Rollback

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (staging/production)"
        required: true
        default: staging
        type: choice
        options:
          - staging
          - production
      reason:
        description: "Reason for rollback"
        required: true
        type: string
      confirm:
        description: "Type ROLLBACK to confirm"
        required: true
        type: string

permissions:
  contents: read

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          test -n "${{ secrets.SUPABASE_DB_HOST }}" || (echo "Missing SUPABASE_DB_HOST" && exit 1)
          test -n "${{ secrets.SUPABASE_DB_PORT }}" || (echo "Missing SUPABASE_DB_PORT" && exit 1)
          test -n "${{ secrets.SUPABASE_DB_USER }}" || (echo "Missing SUPABASE_DB_USER" && exit 1)
          test -n "${{ secrets.SUPABASE_DB_PASS }}" || (echo "Missing SUPABASE_DB_PASS" && exit 1)
          test -n "${{ secrets.SUPABASE_DB_NAME }}" || (echo "Missing SUPABASE_DB_NAME" && exit 1)
          test -n "${{ secrets.SLACK_WEBHOOK_URL_STAGING }}" || (echo "Missing SLACK_WEBHOOK_URL_STAGING" && exit 1)
          echo "✅ All required secrets are configured"

  rollback:
    needs: check-secrets
    if: github.event.inputs.confirm == 'ROLLBACK'
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
      DB_PORT: ${{ secrets.SUPABASE_DB_PORT }}
      DB_USER: ${{ secrets.SUPABASE_DB_USER }}
      DB_PASS: ${{ secrets.SUPABASE_DB_PASS }}
      DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Rollback SQL
        id: rollback
        run: |
          echo "⚠️ Executing rollback migration..."
          PGPASSWORD=$DB_PASS psql \
            -h $DB_HOST \
            -p $DB_PORT \
            -U $DB_USER \
            -d $DB_NAME \
            -f supabase/migrations/20250914_rollback_subscription_columns.sql

      - name: Send Slack Notification
        if: always()
        run: |
          STATUS="${{ job.status }}"
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

          if [ "$STATUS" = "success" ]; then
            COLOR="#36a64f"
            EMOJI="✅"
          else
            COLOR="#e01e5a"
            EMOJI="❌"
          fi

          PAYLOAD=$(cat <<EOF
          {
            "attachments": [
              {
                "color": "$COLOR",
                "blocks": [
                  { "type": "section", "text": { "type": "mrkdwn", "text": "*Atlas Database Rollback* $EMOJI" } },
                  { "type": "section", "fields": [
                    { "type": "mrkdwn", "text": "*Repository:* $GITHUB_REPOSITORY" },
                    { "type": "mrkdwn", "text": "*Actor:* $GITHUB_ACTOR" },
                    { "type": "mrkdwn", "text": "*Job:* Rollback" },
                    { "type": "mrkdwn", "text": "*Status:* $STATUS" },
                    { "type": "mrkdwn", "text": "*Commit:* $GITHUB_SHA" },
                    { "type": "mrkdwn", "text": "*Timestamp:* $TIMESTAMP" }
                  ]}
                ]
              }
            ]
          }
          EOF
          )

          curl -X POST -H 'Content-type: application/json' \
            --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
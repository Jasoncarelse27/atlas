name: Manual Rollback

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (staging/production)"
        required: true
        default: staging
        type: choice
        options:
          - staging
          - production
      reason:
        description: "Reason for rollback"
        required: true
        type: string
      confirm:
        description: "Type ROLLBACK to confirm"
        required: true
        type: string

permissions:
  contents: read

env:
  RECIPIENTS: "admin@otiumcreations.com,rima@otiumcreations.com"

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL_STAGING: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}
      SLACK_WEBHOOK_URL_PROD: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
      CICD_ALERT_URL: ${{ secrets.CICD_ALERT_URL }}
      CICD_ALERT_TOKEN: ${{ secrets.CICD_ALERT_TOKEN }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Verify Required Secrets
        run: |
          echo "üîç Checking required secrets..."
          if [ -z "$SLACK_WEBHOOK_URL_STAGING" ]; then
            echo "‚ùå Missing SLACK_WEBHOOK_URL_STAGING secret"
            exit 1
          fi
          if [ -z "$SLACK_WEBHOOK_URL_PROD" ]; then
            echo "‚ùå Missing SLACK_WEBHOOK_URL_PROD secret"
            exit 1
          fi
          if [ -z "$CICD_ALERT_URL" ]; then
            echo "‚ùå Missing CICD_ALERT_URL secret"
            exit 1
          fi
          if [ -z "$CICD_ALERT_TOKEN" ]; then
            echo "‚ùå Missing CICD_ALERT_TOKEN secret"
            exit 1
          fi
          if [ -z "$SUPABASE_DB_URL" ]; then
            echo "‚ùå Missing SUPABASE_DB_URL secret"
            exit 1
          fi
          echo "‚úÖ All required secrets are configured"

  rollback:
    needs: check-secrets
    if: github.event.inputs.confirm == 'ROLLBACK'
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL_STAGING: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}
      SLACK_WEBHOOK_URL_PROD: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
      CICD_ALERT_URL: ${{ secrets.CICD_ALERT_URL }}
      CICD_ALERT_TOKEN: ${{ secrets.CICD_ALERT_TOKEN }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      RECIPIENTS: "admin@otiumcreations.com,rima@otiumcreations.com"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Send Rollback Started Notification
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          REASON="${{ github.event.inputs.reason }}"
          MESSAGE="üîÑ Rollback STARTED - $REASON"
          
          # Send email notification
          if [ -n "$CICD_ALERT_URL" ] && [ -n "$CICD_ALERT_TOKEN" ]; then
            BODY=$(jq -n --arg env "$ENVIRONMENT" --arg message "$MESSAGE" \
              '{ env: $env, message: $message }')
            
            curl -s -X POST "$CICD_ALERT_URL" \
              -H "Authorization: Bearer $CICD_ALERT_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$BODY" || echo "Email notification failed (non-blocking)"
          fi

      - name: Run Rollback SQL
        run: |
          echo "üîÑ Executing rollback migration..."
          psql "${SUPABASE_DB_URL}" -v "ON_ERROR_STOP=1" -f supabase/migrations/20250914_rollback_subscription_columns.sql
          echo "‚úÖ Rollback SQL executed successfully"

      - name: Send Slack Notification
        if: always()
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          ROLLBACK_REASON: ${{ github.event.inputs.reason }}
        run: |
          # Determine webhook URL based on environment
          if [ "$ENVIRONMENT" = "production" ]; then
            WEBHOOK_URL="$SLACK_WEBHOOK_URL_PROD"
            ENV_EMOJI="üö®"
          else
            WEBHOOK_URL="$SLACK_WEBHOOK_URL_STAGING"
            ENV_EMOJI="üß™"
          fi
          
          # Determine status and color
          STATUS="${{ job.status }}"
          COLOR="#36a64f"
          EMOJI="‚úÖ"
          if [ "$STATUS" != "success" ]; then
            COLOR="#e01e5a"
            EMOJI="‚ùå"
          fi
          
          # Send to Slack
          if [ -n "$WEBHOOK_URL" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"attachments\": [
                  {
                    \"color\": \"$COLOR\",
                    \"blocks\": [
                      {
                        \"type\": \"header\",
                        \"text\": {
                          \"type\": \"plain_text\",
                          \"text\": \"$ENV_EMOJI $EMOJI Atlas Database Rollback ($ENVIRONMENT)\",
                          \"emoji\": true
                        }
                      },
                      {
                        \"type\": \"section\",
                        \"fields\": [
                          { \"type\": \"mrkdwn\", \"text\": \"*Repository:*\n${{ github.repository }}\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Environment:*\n$ENVIRONMENT\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Job:*\n${{ job.name }}\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Status:*\n$STATUS\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Actor:*\n${{ github.actor }}\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Commit:*\n${{ github.sha }}\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>\" },
                          { \"type\": \"mrkdwn\", \"text\": \"*Timestamp:*\n$(date -u '+%Y-%m-%d %H:%M:%S UTC')\" }
                        ]
                      },
                      {
                        \"type\": \"section\",
                        \"text\": {
                          \"type\": \"mrkdwn\",
                          \"text\": \"*Rollback Reason:* $ROLLBACK_REASON\"
                        }
                      }
                    ]
                  }
                ]
              }" \
              "$WEBHOOK_URL"
            
            echo "‚úÖ Slack alert sent successfully"
          else
            echo "‚ö†Ô∏è No webhook URL configured for environment: $ENVIRONMENT"
          fi
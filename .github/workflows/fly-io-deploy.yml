name: Deploy Voice V2 to Fly.io

on:
  push:
    branches: [main]
    paths:
      - 'api/voice-v2/**'
      - '.github/workflows/fly-io-deploy.yml'
  workflow_dispatch:
    inputs:
      region:
        description: 'Region to deploy to (iad, fra, or both)'
        required: false
        default: 'both'
        type: choice
        options:
          - both
          - iad
          - fra

env:
  APP_NAME: atlas-voice-v2
  US_REGION: iad
  EU_REGION: fra

jobs:
  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🔐 Authenticate with Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl auth whoami

      - name: 🌎 Deploy to US region
        if: github.event.inputs.region == 'both' || github.event.inputs.region == 'iad' || github.event_name == 'push'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        working-directory: api/voice-v2
        run: |
          echo "Deploying to US region (${{ env.US_REGION }})..."
          # Use --regions flag (plural) to target specific region
          # fly.toml already has primary_region = "iad", so this will deploy there
          flyctl deploy --app ${{ env.APP_NAME }} --regions ${{ env.US_REGION }} --remote-only || {
            echo "⚠️ Deployment failed, checking if app exists..."
            # Check if app exists
            if ! flyctl apps list | grep -q "${{ env.APP_NAME }}"; then
              echo "Creating app..."
              flyctl apps create ${{ env.APP_NAME }} --org personal
            fi
            # Retry deployment
            flyctl deploy --app ${{ env.APP_NAME }} --regions ${{ env.US_REGION }} --remote-only
          }

      - name: 🌍 Deploy to EU region
        if: github.event.inputs.region == 'both' || github.event.inputs.region == 'fra' || github.event_name == 'push'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        working-directory: api/voice-v2
        run: |
          echo "Deploying to EU region (${{ env.EU_REGION }})..."
          
          # Check if EU machine exists
          EU_MACHINE=$(flyctl machines list --app ${{ env.APP_NAME }} --json 2>/dev/null | jq -r ".[] | select(.region == \"${{ env.EU_REGION }}\") | .id" | head -1)
          
          if [ -z "$EU_MACHINE" ]; then
            echo "EU machine doesn't exist, creating..."
            US_MACHINE=$(flyctl machines list --app ${{ env.APP_NAME }} --json | jq -r ".[] | select(.region == \"${{ env.US_REGION }}\") | .id" | head -1)
            if [ -n "$US_MACHINE" ]; then
              flyctl machine clone $US_MACHINE --region ${{ env.EU_REGION }} --app ${{ env.APP_NAME }}
            else
              echo "No US machine found, deploying fresh to EU..."
              flyctl deploy --app ${{ env.APP_NAME }} --regions ${{ env.EU_REGION }} --remote-only
            fi
          else
            echo "EU machine exists, updating..."
            flyctl deploy --app ${{ env.APP_NAME }} --regions ${{ env.EU_REGION }} --remote-only
          fi

      - name: 🔍 Health check
        run: |
          echo "Waiting for deployment to stabilize..."
          sleep 10
          
          echo "Checking health endpoint..."
          if curl -f "https://${{ env.APP_NAME }}.fly.dev/health" > /dev/null 2>&1; then
            echo "✅ Health check passed"
          else
            echo "⚠️ Health check failed (deployment may still be in progress)"
            exit 0  # Don't fail workflow, deployment might still be starting
          fi

      - name: 📊 Show machine status
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl machines list --app ${{ env.APP_NAME }}

      - name: ✅ Deployment summary
        run: |
          echo "## 🚀 Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**App:** ${{ env.APP_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** https://${{ env.APP_NAME }}.fly.dev" >> $GITHUB_STEP_SUMMARY
          echo "**WebSocket:** wss://${{ env.APP_NAME }}.fly.dev" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Regions:**" >> $GITHUB_STEP_SUMMARY
          echo "- US: ${{ env.US_REGION }} (Washington DC)" >> $GITHUB_STEP_SUMMARY
          echo "- EU: ${{ env.EU_REGION }} (Frankfurt)" >> $GITHUB_STEP_SUMMARY


name: Manual E2E Testing

on:
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - cross-browser
          - mobile
          - chat-functionality
      environment:
        description: 'Environment to test'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  manual-e2e:
    name: Manual E2E Testing - ${{ inputs.test_suite }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Selected Test Suite
        run: |
          case "${{ inputs.test_suite }}" in
            "all")
              npx playwright test --reporter=html
              ;;
            "cross-browser")
              npx playwright test --project=chromium --project=firefox --project=webkit
              ;;
            "mobile")
              npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
              ;;
            "chat-functionality")
              npx playwright test tests/e2e/chat-page.spec.ts
              ;;
          esac
        continue-on-error: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: manual-e2e-results-${{ inputs.test_suite }}-${{ github.run_number }}
          path: playwright-report/

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = `## üß™ Manual E2E Test Results\n\n`;
            comment += `- **Test Suite**: ${{ inputs.test_suite }}\n`;
            comment += `- **Environment**: ${{ inputs.environment }}\n`;
            comment += `- **Status**: ${{ job.status === 'success' ? '‚úÖ Passed' : '‚ùå Failed' }}\n`;
            comment += `- **Workflow Run**: [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
